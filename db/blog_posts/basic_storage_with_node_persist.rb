Blog.create!(
  title: "Basic Storage With Node-Persist",
  body: "<h4 class=“center>Basic Setup</h4>\r\n\r\n<p>Let’s do our basic setup. Run <code>npm install</code>, then <code>npm install node-persist --save</code>.</p>\r\n\r\n<p>Create a new file called app.js and console.log any message you like. Now, whenever you run <code>node app.js</code>, this message should be logged in your terminal.</p>\r\n\r\n<p>Since we won’t be using a web server in this app, we need to set a starting point for our app. We can do this by updating package.json. Update the ‘scripts’ key with these values:</p><code><pre> \"scripts\": {\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\r\n    \"start\": \"node app.js\"\r\n  }</pre></code>\r\n\r\n<p>Instead of running <code>node app.js</code> or whichever file you want to run, you can just run <code>npm start</code>.</p>\r\n\r\n<h4 class=“center>Data Storage</h4>\r\n<p>In app.js, require node-persist like this: </p><code><pre>var storage = require(‘node-persist’);\r\nstorage.initSync();</pre></code>\r\n\r\n<h5 class=“center>Saving Data</h5>\r\n<p>Now our machine should be ready to write and save variables. Whenever we call setItemSync, a variable is stored to our computer. We could write something like this: <code><pre>storage.setItemSync(‘accounts’,  [{\r\n    username:  ’Sandra’,\r\n    balance: 100\r\n}]);;</pre></code> The moment we run <code>npm start</code>, this information should already be stored. So if you comment that line out and then re-run the program, you should still be able to retrieve the data.\r\n\r\n<h5 class=“center>Retrieving Data</h5>\r\n<p>After you’ve commented out <code>storage.setItemSync(‘accounts’, …</code> in app.js (but make sure to keep getItemSync), add these lines underneath: <code><pre>var accounts = storage.getItemSync(‘accounts’);\r\nconsole.log(accounts);</pre></code> Now run your program, your stored account variables should be printed!</p>\r\n\r\n<h5 class=“center>Adding New Data</h5>\r\n\r\n<p>If we want to push a new account onto the accounts array, we can do the following:</p>\r\n<code><pre>accounts.push({\r\n    username: ‘Kel’,\r\n    balance: 150\r\n});\r\nstorage.setItemSync(‘accounts’, accounts);\r\nconsole.log(accounts);</pre></code>\r\n\r\n<p>Now, when you run <code>npm start</code>, you should see both users printed out in your terminal. Awesome! These two accounts should also be printed after you comment out <code>accounts.push…</code> and the <code>storage.setItemSync</code> line.</p>",
  topic: "Javascript",
  created_at: "2016-06-17"
)